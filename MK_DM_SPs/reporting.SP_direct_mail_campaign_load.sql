DROP PROCEDURE IF EXISTS reporting.SP_direct_mail_campaign_load;
CREATE PROCEDURE reporting.`SP_direct_mail_campaign_load`(p_campaign_name varchar(30))
BEGIN
/*******************************************************************************************************************************
---    NAME : SP_direct_mail_campaign_load
---    DESCRIPTION: script for direct mail campaign data load
---    the campaign name is mandtory input parameter for executing this store procedure, only keep one version of data for each campaign name
---    the campaign data in Excel will be loaded into the staging table manually, marketing team will verify the data and add camapign name accordingly
---    tben execute this SP to move the campaign data from staging table to target table
---    DD/MM/YYYY    By              Comment
---    07/11/2017    Eric Pu         initial version
---    09/08/2018                    DAT-539 change the table / column orders and load data from reporting.direct_mail_clarity_long_list 
----   20/12/2018                    DAT-676 add additional column direct_mail_transunion, update SP
----   30/10/2019                    DAT-1155 Add column 'CV Income Estimator' to reporting.direct_mail_transunion
******************************************************************************************************************************/
  DECLARE v_total_count int default 0;
  SET SQL_SAFE_UPDATES=0;
  SET @start = 'Start', @end = 'End', @success = ' succeeded,', @failed = ' failed, returned SQL_STATE = ', @error_msg = ', error message = ', @total_rows = ' total row count = '; 
  SET @process_name = 'SP_direct_mail_campaign_load', @status_flag_success = 1, @status_flag_failure = 0;
  SET @valuation_date = curdate();  
  SET @campaign_name_i = trim(p_campaign_name);
  -- user initial caps for campaign name
  select concat(upper(left(lower(trim(@campaign_name_i)), 1)),   right(lower(trim(@campaign_name_i)), (length(trim(@campaign_name_i)) - 1))) into @campaign_name;

 -- log the start info
  CALL reporting.SP_process_log(@valuation_date, @process_name, @start, null, 'job is running', null);
  BEGIN
  	DECLARE sql_code CHAR(5) DEFAULT '00000';
  	DECLARE sql_msg TEXT;
  	DECLARE rowCount INT;
  	DECLARE return_message TEXT;
  	-- Declare exception handler for failed insert
  	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  	BEGIN
  		GET DIAGNOSTICS CONDITION 1
  			sql_code = RETURNED_SQLSTATE, sql_msg = MESSAGE_TEXT;
  	END;
    SET @process_label ='Step 1 - remove any previous load for same campaign name for the running date', @process_type = 'Delete';
		If @campaign_name like 'Clarity%' then 
			select max(campaign_name) into @new_campaign_name from reporting.stg_direct_mail_clarity;
			delete from reporting.direct_mail_clarity where report_date = @valuation_date  and campaign_name = @new_campaign_name;
    else
      select max(campaign_name) into @new_campaign_name from reporting.stg_direct_mail_transunion;
			delete from reporting.direct_mail_transunion where report_date = @valuation_date and campaign_name = @new_campaign_name;
    end if;
		-- log the process
		IF sql_code = '00000' THEN
			GET DIAGNOSTICS rowCount = ROW_COUNT;
			SET return_message = CONCAT(@process_type, @success, @total_rows,rowCount);
			CALL reporting.SP_process_log(@valuation_date, @process_name, @process_label, @process_type, return_message, @status_flag_success);
		ELSE
			SET return_message = CONCAT(@process_type, @failed, sql_code, @error_msg ,sql_msg);
			CALL reporting.SP_process_log(@valuation_date, @process_name, @process_label, @process_type, return_message, @status_flag_failure);
		END IF;
    
  END;
  
  BEGIN
  	DECLARE sql_code CHAR(5) DEFAULT '00000';
  	DECLARE sql_msg TEXT;
  	DECLARE rowCount INT;
  	DECLARE return_message TEXT; 
  	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  	BEGIN
  		GET DIAGNOSTICS CONDITION 1
  			sql_code = RETURNED_SQLSTATE, sql_msg = MESSAGE_TEXT;
  	END;
    SET @process_label =concat('Step 2 - insert campaign data from staging table for campaign: ', @new_campaign_name), @process_type = 'Insert';
		If @campaign_name like 'Clarity%' then 
			insert into reporting.direct_mail_clarity (
        `id`, -- identical with the id in direct_mail_clarity_long_list
				`campaign_name`,
				`is_remail`,
				`promotion_code`,
				`promotion_code_remail`,
				`report_date`,
				`I_city`,
				`I_days_since_last_sale`,
				`I_ITIN_as_SSN`,  
				`I_ssn`,
				`I_state`, 
				`I_Total_historical_inquiries`,
				`I_zip_code`,
				`ALL0100`,
				`ALL0200`,
				`ALL0216`,
				`ALL0317`,
				`ALL0336`,
				`ALL0400`,
				`ALL0416`,
				`ALL0436`,
				`ALL0446`,
				`ALL0448`,
				`ALL0700`,
				`ALL1380`,
				`ALL2000`,
				`ALL2001`,
				`ALL2002`,
				`ALL2005`,
				`ALL2106`,
				`ALL2136`,
				`ALL2176`,
				`ALL2326`,
				`ALL2327`,
				`ALL2357`,
				`ALL2380`,
				`ALL2387`,
				`ALL2427`,
				`ALL2428`,
				`ALL2480`,
				`ALL2707`,
				`ALL2870`,
				`ALL2907`,
				`ALL2937`,
				`ALL2967`,
				`ALL2990`,
				`ALL3517`,
				`ALL4080`,
				`ALL5047`,
				`ALL5070`,
				`ALL5743`,
				`ALL8026`,
				`ALL8164`,
				`ALL8167`,
				`ALL8325`,
				`ALX5839`,
				`AUA0416`,
				`AUA1300`,
				`AUA2358`,
				`AUA5820`,
				`AUA6160`,
				`BCA0416`,
				`BCA5030`,
				`BCA5070`,
				`BCA5740`,
				`BCA6220`,
				`BCC0436`,
				`BCC0446`,
				`BCC1360`,
				`BCC3342`,
				`BCC3345`,
				`BCC3423`,
				`BCC3512`,
				`BCC5020`,
				`BCC5320`,
				`BCC5421`,
				`BCC5620`,
				`BCC5627`,
				`BCC7117`,
				`BCC8120`,
				`BCX3421`,
				`BCX3422`,
				`BRC0416`,
				`BRC1300`,
				`BRC5320`,
				`BRC5830`,
				`BRC7140`,
				`CITY_NAME`, 
				`COL3210`,
				`COL5060`,
				`COL8165`,
				`CON_FIRST_NAME`,
				`CON_GEN_CD`, 
				`CON_LAST_NAME`,  
				`CON_MID_INIT`, 
				`FIP0300`,
				`FIP2358`,
				`HOUSE_NB`,
				`I_ofac_match`,  
				`I_ofac_score`,
				`I_ssn_d_first_last_name_cnt`,    
				`I_ssn_deceased`,
				`I_ssn_first_appearance`,
				`I_ssn_first_last_name_count`,
				`I_ssn_first_name_count`,
				`I_ssn_last_name_count`,
				`I_ssn_valid`,
				`IA_dsince_1st_addr_match`,
				`IA_dsince_lst_addr_nonmatch`,
				`IA_dsince_lst_income_rpt`,
				`IA_dsince_lst_paydate_rpt`,
				`IA_high_income_1_yr`,
				`IA_Hit`,
				`IA_last_direct_deposit`,
				`IA_last_housing_status`,
				`IA_last_pay_freq`,
				`IA_low_income_1_yr`,
				`IA_median_income_1_yr`, 
				`IA_median_income_180_days`,
				`IA_median_income_90_days`,
				`IA_mode_income_1_yr`,
				`IA_mode_income_180_days`,  
				`IA_mode_income_90_days`,
				`IA_next_paydate_calc`,
				`IA_num_incomes_1_yr`,
				`IA_num_incomes_180_days`,
				`IA_num_incomes_90_days`,   
				`IQT9415`,
				`IQT9420`,
				`IQT9425`,
				`IQT9426`,
				`MTA6160`,
				`MTF2358`,
				`MTF8166`,
				`MTX5839`,
				`PIL5020`,
				`PREDIRECTN_CD`,
				`PSTDIRECTN_CD`,    
				`respscr_v2`, 
				`REV0300`,
				`REV1360`,
				`REV2320`,
				`REV3421`,
				`REV5020`,
				`REV5620`,
				`REV5627`,
				`REV8160`,
				`RiskScore`,  
				`RTI5020`,
				`RTI5820`,
				`RTR3422`,
				`ssn_7`,
				`STATE_CD`,
				`STREET_NAME`,
				`STREET_SUFFIX`,  
				`STU5820`,
				`UNIT_ID`,
				`UNIT_TYPE`,
				`VANTAGE_V3_SCORE`,  
				`XFC06`,
				`XFC07`,
				`ZIP_CD`)
		select `id`,
				`campaign_name`,
				`is_remail`,
				`promotion_code`,
				`promotion_code_remail`,
				`report_date`,
				null as  `I_city`,
				null as `I_days_since_last_sale`,
				null as `I_ITIN_as_SSN`,  
				null as `I_ssn`,
				null as `I_state`, 
				null as `I_Total_historical_inquiries`,
				null as `I_zip_code`,
				`ALL0100`,
				`ALL0200`,
				`ALL0216`,
				`ALL0317`,
				`ALL0336`,
				`ALL0400`,
				`ALL0416`,
				`ALL0436`,
				`ALL0446`,
				`ALL0448`,
				`ALL0700`,
				`ALL1380`,
				`ALL2000`,
				`ALL2001`,
				`ALL2002`,
				`ALL2005`,
				`ALL2106`,
				`ALL2136`,
				`ALL2176`,
				`ALL2326`,
				`ALL2327`,
				`ALL2357`,
				`ALL2380`,
				`ALL2387`,
				`ALL2427`,
				`ALL2428`,
				`ALL2480`,
				`ALL2707`,
				`ALL2870`,
				`ALL2907`,
				`ALL2937`,
				`ALL2967`,
				`ALL2990`,
				`ALL3517`,
				`ALL4080`,
				`ALL5047`,
				`ALL5070`,
				`ALL5743`,
				`ALL8026`,
				`ALL8164`,
				`ALL8167`,
				`ALL8325`,
				`ALX5839`,
				`AUA0416`,
				`AUA1300`,
				`AUA2358`,
				`AUA5820`,
				`AUA6160`,
				`BCA0416`,
				`BCA5030`,
				`BCA5070`,
				`BCA5740`,
				`BCA6220`,
				`BCC0436`,
				`BCC0446`,
				`BCC1360`,
				`BCC3342`,
				`BCC3345`,
				`BCC3423`,
				`BCC3512`,
				`BCC5020`,
				`BCC5320`,
				`BCC5421`,
				`BCC5620`,
				`BCC5627`,
				`BCC7117`,
				`BCC8120`,
				`BCX3421`,
				`BCX3422`,
				`BRC0416`,
				`BRC1300`,
				`BRC5320`,
				`BRC5830`,
				`BRC7140`,
				`CITY_NAME`, 
				`COL3210`,
				`COL5060`,
				`COL8165`,
				`CON_FIRST_NAME`,
				`CON_GEN_CD`, 
				`CON_LAST_NAME`,  
				`CON_MID_INIT`, 
				`FIP0300`,
				`FIP2358`,
				`HOUSE_NB`,
				`I_ofac_match`,  
				`I_ofac_score`,
				`I_ssn_d_first_last_name_cnt`,    
				`I_ssn_deceased`,
				`I_ssn_first_appearance`,
				`I_ssn_first_last_name_count`,
				`I_ssn_first_name_count`,
				`I_ssn_last_name_count`,
				`I_ssn_valid`,
				`IA_dsince_1st_addr_match`,
				`IA_dsince_lst_addr_nonmatch`,
				`IA_dsince_lst_income_rpt`,
				`IA_dsince_lst_paydate_rpt`,
				`IA_high_income_1_yr`,
				`IA_Hit`,
				`IA_last_direct_deposit`,
				`IA_last_housing_status`,
				`IA_last_pay_freq`,
				`IA_low_income_1_yr`,
				`IA_median_income_1_yr`, 
				`IA_median_income_180_days`,
				`IA_median_income_90_days`,
				`IA_mode_income_1_yr`,
				`IA_mode_income_180_days`,  
				`IA_mode_income_90_days`,
				`IA_next_paydate_calc`,
				`IA_num_incomes_1_yr`,
				`IA_num_incomes_180_days`,
				`IA_num_incomes_90_days`,   
				`IQT9415`,
				`IQT9420`,
				`IQT9425`,
				`IQT9426`,
				`MTA6160`,
				`MTF2358`,
				`MTF8166`,
				`MTX5839`,
				`PIL5020`,
				`PREDIRECTN_CD`,
				`PSTDIRECTN_CD`,    
				`respscr_v2`, 
				`REV0300`,
				`REV1360`,
				`REV2320`,
				`REV3421`,
				`REV5020`,
				`REV5620`,
				`REV5627`,
				`REV8160`,
				`RiskScore`,  
				`RTI5020`,
				`RTI5820`,
				`RTR3422`,
				 LPAD(`ssn_7`, 7, '0'), -- add leading 0 if less then 7 digit 
				`STATE_CD`,
				`STREET_NAME`,
				`STREET_SUFFIX`,  
				`STU5820`,
				`UNIT_ID`,
				`UNIT_TYPE`,
				`VANTAGE_V3_SCORE`,  
				`XFC06`,
				`XFC07`,
				`ZIP_CD`
			from reporting.direct_mail_clarity_long_list
			where campaign_name = @campaign_name_i;  -- @campaign_name_i is unique for each reporting date
    else
			insert into reporting.direct_mail_transunion(
      report_date,
		 `campaign_name`,
			`PermlD`,
			`CONSUMER_ID`,
			`SEQUENCE_NUMBER`,
			`FirstName`,
			`MiddleName`,
			`LastName`,
			`FullName`,
			`UnparsedAddr1` ,
			`City`,
			`State`,
			`ZipCode`,
			`Zip_PLUS_4Code`,
			`MetraAreaZipCde`,
			`IntraAreaZipCde`,
			`CarrierRoute`,
			`FIPS`,
			`CountyCode`,
			`CountyName`,
			`CongressDistrict`,
			`DeliveryPtBarcode`,
			`UrbanizationName`,
			`StandardizationFlag`,
			`MFDUIndicator`,
			`Soc_Security_Num`,
			`gna001`,
			`MILITARY_LENDING_ACT_FLAG`,
			`CREDIT_AS_OF_DATE`,
			`VantageScore3`,
			`CV_PL_Propensity_Score`,
			`PL_Risk_Score`,
			`at02s`,
			`s207s`,
			`s208s`,
			`s207a`,
			`fc03s`,
			`g238s`,
			`g236s`,
			`co02s`,
			`g069s`,
			`g227s`,
			`bc02s`,
			`bc21s`,
			`bc108s`,
			`bc06s`,
			`bc107s`,
			`bc106s`,
			`re02s`,
			`re21s`,
			`re06s`,
			`re33s`,
			`au36s`,
			`mt36s`,
			`mt47s`,
			`in21s`,
			`in06s`,
			`in101s`,
      score,
			linkb001,
			linkb014,
			linkb005,
			linkb002,
			linkb003,
			linkb004,
			linkb013,
			linkb015,
			linkb016,
			linkb017,
			linkb018,
			linkb010,
			linkb011,
			linkb006,
			linkb007,
			linkb008,
			linkb009,
			linkb012,
			prohitfl,
			linkc006,
			linkc020,
			linkc007,
			linkc048,
			linkc025,
			linkc026,
			linkc027,
			linkc028,
			linkc029,
			linkc024,
			linkc031,
			linkc032,
			linkc033,
			linkc034,
			linkc035,
			linkc030,
			linkc038,
			linkc039,
			linkc040,
			linkc041,
			linkc042,
			linkc037,
			linkc036,
			linkc008,
			linkc009,
			linkc050,
			linkc012,
			linkc011,
			linkc010,
			linkc043,
			linkc044,
			linkc045,
			linkc046,
			linkc047,
			linkc049,
			linkc005,
			linkc004,
			linkc051,
			linkc014,
			linkc015,
			linkc016,
			linkc022,
			linkc023,
			filler,
			linkd001,
			linkd004,
			linkd014,
			linkd008,
			linkd002,
			linkd003,
			linkd005,
			linkd009,
			linkd011,
			linkd010,
			linkd013,
			linkd006,
			linkd007,
			linkd012,
			iscrhit,
			linkt001,
			linkt002,
			linkt003,
			linkt004,
			linkt006,
			linkt007,
			linkt008,
			linkt009,
			linkt010,
			linkt011,
      cv_income_estimator
			)
		select @valuation_date,
      `campaign_name`,
			`PermlD`,
			`CONSUMER_ID`,
			`SEQUENCE_NUMBER`,
			`FirstName`,
			`MiddleName`,
			`LastName`,
			`FullName`,
			`UnparsedAddr1` ,
			`City`,
			`State`,
			`ZipCode`,
			`Zip_PLUS_4Code`,
			`MetraAreaZipCde`,
			`IntraAreaZipCde`,
			`CarrierRoute`,
			`FIPS`,
			`CountyCode`,
			`CountyName`,
			`CongressDistrict`,
			`DeliveryPtBarcode`,
			`UrbanizationName`,
			`StandardizationFlag`,
			`MFDUIndicator`,			
			 LPAD(`Soc_Security_Num`, 7, '0'), -- add leading 0 if less then 7 digit
			`gna001`,
			`MILITARY_LENDING_ACT_FLAG`,
			`CREDIT_AS_OF_DATE`,
			`VantageScore3`,
			`CV_PL_Propensity_Score`,
			`PL_Risk_Score`,
			`at02s`,
			`s207s`,
			`s208s`,
			`s207a`,
			`fc03s`,
			`g238s`,
			`g236s`,
			`co02s`,
			`g069s`,
			`g227s`,
			`bc02s`,
			`bc21s`,
			`bc108s`,
			`bc06s`,
			`bc107s`,
			`bc106s`,
			`re02s`,
			`re21s`,
			`re06s`,
			`re33s`,
			`au36s`,
			`mt36s`,
			`mt47s`,
			`in21s`,
			`in06s`,
			`in101s`,
      score,
			linkb001,
			linkb014,
			linkb005,
			linkb002,
			linkb003,
			linkb004,
			linkb013,
			linkb015,
			linkb016,
			linkb017,
			linkb018,
			linkb010,
			linkb011,
			linkb006,
			linkb007,
			linkb008,
			linkb009,
			linkb012,
			prohitfl,
			linkc006,
			linkc020,
			linkc007,
			linkc048,
			linkc025,
			linkc026,
			linkc027,
			linkc028,
			linkc029,
			linkc024,
			linkc031,
			linkc032,
			linkc033,
			linkc034,
			linkc035,
			linkc030,
			linkc038,
			linkc039,
			linkc040,
			linkc041,
			linkc042,
			linkc037,
			linkc036,
			linkc008,
			linkc009,
			linkc050,
			linkc012,
			linkc011,
			linkc010,
			linkc043,
			linkc044,
			linkc045,
			linkc046,
			linkc047,
			linkc049,
			linkc005,
			linkc004,
			linkc051,
			linkc014,
			linkc015,
			linkc016,
			linkc022,
			linkc023,
			filler,
			linkd001,
			linkd004,
			linkd014,
			linkd008,
			linkd002,
			linkd003,
			linkd005,
			linkd009,
			linkd011,
			linkd010,
			linkd013,
			linkd006,
			linkd007,
			linkd012,
			iscrhit,
			linkt001,
			linkt002,
			linkt003,
			linkt004,
			linkt006,
			linkt007,
			linkt008,
			linkt009,
			linkt010,
			linkt011,
      cv_income_estimator -- DAT-1155
			from reporting.stg_direct_mail_transunion;
  
    end if;
     
		IF sql_code = '00000' THEN
			GET DIAGNOSTICS rowCount = ROW_COUNT;
			SET return_message = CONCAT(@process_type, @success, @total_rows,rowCount);
			CALL reporting.SP_process_log(@valuation_date, @process_name, @process_label, @process_type, return_message, @status_flag_success);
		ELSE
			SET return_message = CONCAT(@process_type, @failed, sql_code, @error_msg ,sql_msg);
			CALL reporting.SP_process_log(@valuation_date, @process_name, @process_label, @process_type, return_message, @status_flag_failure);
		END IF;    
  END;

  -- log the process for completion
  CALL reporting.SP_process_log(@valuation_date, @process_name, @end, null, 'job is done', @status_flag_success);

END;
